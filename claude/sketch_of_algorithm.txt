from pyfrotz import Frotz

claude.send("gameplay notes")

game = Frotz("data/zork1.z3")
game_intro = game.get_intro()

command = claude.send(game_intro)

room, description = game.do_command("look")
print(room.rstrip())

game.do_command("quit")
game.do_command("Y")

md claude-run-11223
cd claude-run-11223

# manually claude --dangeroulsy-skip-permissions in this folder

# copied context project file like project and gameplay into folder

# LOOP
# Python writes frotz answers formatted to console (in colour)
# Python created context.md with current room using frotz
# Python delete old output

echo "read context.md." | claude -p --dangeroulsy-skip-permissions
-- options how to run it a) start clean or b)
echo "tell player 'read context.md again'"

# wait for output to appear (with timeout)
# Python read output.txt to
# Python writes Claude answer to console (different colour) -- goal is to see the flow of trhe game
  (this writing is also the log of what is going on)
# Python: pass it to frotz
# LOOP end
# when do we end?

# Files in the current run (claude-run-<ID>)
copy of project
context.md
output.txt
copy of Zork Gameplay Notes.txt
maybe some log how things went
maybe some json with statistics

3 "Points" to use claude
1. start - has created the folder with context files
   manual claude init in that folder with name of folder (print the expected command to be run)
   wait for enter

    10003  mkdir claude-run-2
    10004  cd claude-run-2
    10006  cp ../claude-run-11223 * .
    10007  cp ../claude/project.md .
    10008  cp ../data/Zork\ Gameplay\ Notes.txt .
    10009  claude --dangerously-skip-permissions

2. next command has context
   remove output.txt
   save context to folder

   invoke "tell [folder_name] read context
   waiting for output.txt

   10010  rm output.txt
   10011  claude-watch
   10012* claude-rename claude-run-2 hero
   10013  tell hero 'there is a new context, process it and create another output file with your action, then stop'

3. close
   -
